{"ast":null,"code":"import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\nconst agent = new HttpAgent({\n  host: \"http://127.0.0.1:4943\"\n});\nagent.fetchRootKey(); // Necessary for local development\n\nconst hopechain_engine_id = process.env.REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID;\nconsole.log(\"Canister ID:\", hopechain_engine_id);\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id\n});\nconsole.log(\"Available methods:\", Object.keys(hopechain_engine));\nexport const registerUser = async name => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user;\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const checkUser = async name => {\n  try {\n    return await hopechain_engine.getUser(name);\n  } catch (error) {\n    console.error('Error checking user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["Actor","HttpAgent","idlFactory","hopechain_engine_idl","agent","host","fetchRootKey","hopechain_engine_id","process","env","REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID","console","log","hopechain_engine","createActor","canisterId","Object","keys","registerUser","name","user","error","checkUser","getUser"],"sources":["/home/jeco/myprojects/icp/hopechain-frontend/src/ic/ic-service.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\n\nconst agent = new HttpAgent({ host: \"http://127.0.0.1:4943\" });\nagent.fetchRootKey(); // Necessary for local development\n\nconst hopechain_engine_id = process.env.REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID;\n\nconsole.log(\"Canister ID:\", hopechain_engine_id);\n\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id,\n});\n\nconsole.log(\"Available methods:\", Object.keys(hopechain_engine));\n\n\nexport const registerUser = async (name) => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const checkUser = async (name) => {\n  try {\n    return await hopechain_engine.getUser(name);\n  } catch (error) {\n    console.error('Error checking user:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,gBAAgB;AACjD,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,0EAA0E;AAE7H,MAAMC,KAAK,GAAG,IAAIH,SAAS,CAAC;EAAEI,IAAI,EAAE;AAAwB,CAAC,CAAC;AAC9DD,KAAK,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;;AAEtB,MAAMC,mBAAmB,GAAGC,OAAO,CAACC,GAAG,CAACC,8CAA8C;AAEtFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,mBAAmB,CAAC;AAEhD,MAAMM,gBAAgB,GAAGb,KAAK,CAACc,WAAW,CAACX,oBAAoB,EAAE;EAC/DC,KAAK;EACLW,UAAU,EAAER;AACd,CAAC,CAAC;AAEFI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEI,MAAM,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAAC;AAGhE,OAAO,MAAMK,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMP,gBAAgB,CAACK,YAAY,CAACC,IAAI,CAAC;IACtD,IAAIC,IAAI,EAAE;MACRT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,IAAI,CAAC;MACrC,OAAOA,IAAI;IACb,CAAC,MAAM;MACLT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOH,IAAI,IAAK;EACvC,IAAI;IACF,OAAO,MAAMN,gBAAgB,CAACU,OAAO,CAACJ,IAAI,CAAC;EAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}