{"ast":null,"code":"var _jsxFileName = \"/home/jeco/myprojects/icp/hopechain-frontend/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < all_product.length + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\n\n// Currency conversion rates (mock values for demonstration)\nconst conversionRates = {\n  USD: 1,\n  EUR: 0.91,\n  // Example conversion rate\n  GBP: 0.76,\n  // Example conversion rate\n  BTC: 0.000021,\n  // Example conversion rate\n  ETH: 0.00034,\n  // Example conversion rate\n  ICP: 0.92 // Example conversion rate\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [currency, setCurrency] = useState('USD'); // Default currency\n  const [currencySymbol, setCurrencySymbol] = useState('$'); // Default symbol\n\n  // Currency Symbols Map\n  const currencySymbols = {\n    USD: '$',\n    EUR: '€',\n    GBP: '£',\n    BTC: '₿',\n    ETH: 'Ξ',\n    ICP: 'Ξ' // Placeholder for ICP, adjust as needed\n  };\n\n  // Convert price based on selected currency\n  const convertPrice = (price, targetCurrency) => {\n    const rate = conversionRates[targetCurrency] || 1;\n    return price * rate;\n  };\n\n  // Handle currency change\n  const handleCurrencyChange = event => {\n    const newCurrency = event.target.value;\n    setCurrency(newCurrency);\n    setCurrencySymbol(currencySymbols[newCurrency]);\n  };\n\n  // Add item to cart\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n\n  // Remove item from cart\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: Math.max(prev[itemId] - 1, 0)\n    }));\n  };\n\n  // Get total cart amount\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * convertPrice(itemInfo.new_price, currency);\n      }\n    }\n    return totalAmount;\n  };\n\n  // Get total cart items\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    currency,\n    currencySymbol,\n    handleCurrencyChange,\n    convertPrice\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"aEiinmqYVPDyUOJ+wF84VWCoVWs=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","length","conversionRates","USD","EUR","GBP","BTC","ETH","ICP","ShopContextProvider","props","_s","cartItems","setCartItems","currency","setCurrency","currencySymbol","setCurrencySymbol","currencySymbols","convertPrice","price","targetCurrency","rate","handleCurrencyChange","event","newCurrency","target","value","addToCart","itemId","prev","removeFromCart","Math","max","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jeco/myprojects/icp/hopechain-frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\n// Create the context\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < all_product.length + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\n// Currency conversion rates (mock values for demonstration)\r\nconst conversionRates = {\r\n    USD: 1,\r\n    EUR: 0.91, // Example conversion rate\r\n    GBP: 0.76, // Example conversion rate\r\n    BTC: 0.000021, // Example conversion rate\r\n    ETH: 0.00034, // Example conversion rate\r\n    ICP: 0.92, // Example conversion rate\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n    const [currency, setCurrency] = useState('USD'); // Default currency\r\n    const [currencySymbol, setCurrencySymbol] = useState('$'); // Default symbol\r\n\r\n    // Currency Symbols Map\r\n    const currencySymbols = {\r\n        USD: '$',\r\n        EUR: '€',\r\n        GBP: '£',\r\n        BTC: '₿',\r\n        ETH: 'Ξ',\r\n        ICP: 'Ξ', // Placeholder for ICP, adjust as needed\r\n    };\r\n\r\n    // Convert price based on selected currency\r\n    const convertPrice = (price, targetCurrency) => {\r\n        const rate = conversionRates[targetCurrency] || 1;\r\n        return price * rate;\r\n    };\r\n\r\n    // Handle currency change\r\n    const handleCurrencyChange = (event) => {\r\n        const newCurrency = event.target.value;\r\n        setCurrency(newCurrency);\r\n        setCurrencySymbol(currencySymbols[newCurrency]);\r\n    };\r\n\r\n    // Add item to cart\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    };\r\n\r\n    // Remove item from cart\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: Math.max(prev[itemId] - 1, 0) }));\r\n    };\r\n\r\n    // Get total cart amount\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let itemInfo = all_product.find((product) => product.id === Number(item));\r\n                totalAmount += cartItems[item] * convertPrice(itemInfo.new_price, currency);\r\n            }\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    // Get total cart items\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                totalItem += cartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    };\r\n\r\n    const contextValue = {\r\n        getTotalCartItems,\r\n        getTotalCartAmount,\r\n        all_product,\r\n        cartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        currency,\r\n        currencySymbol,\r\n        handleCurrencyChange,\r\n        convertPrice,\r\n    };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}