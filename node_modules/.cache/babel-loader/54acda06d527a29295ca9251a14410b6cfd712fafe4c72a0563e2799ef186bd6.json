{"ast":null,"code":"import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\nimport { canisterId as hopechain_engine_id } from '../declarations/hopechain-engine-backend/index.js';\nconst agent = new HttpAgent({\n  host: \"http://127.0.0.1:4943\"\n});\nagent.fetchRootKey(); // Necessary for local development\n\nconsole.log(\"Canister ID:\", hopechain_engine_id);\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id\n});\nexport const registerUser = async name => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user;\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const checkUser = async name => {\n  try {\n    return await hopechain_engine.getUser(name);\n  } catch (error) {\n    console.error('Error checking user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["Actor","HttpAgent","idlFactory","hopechain_engine_idl","canisterId","hopechain_engine_id","agent","host","fetchRootKey","console","log","hopechain_engine","createActor","registerUser","name","user","error","checkUser","getUser"],"sources":["/home/jeco/myprojects/icp/hopechain-frontend/src/ic/ic-service.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\nimport { canisterId as hopechain_engine_id } from '../declarations/hopechain-engine-backend/index.js';\n\nconst agent = new HttpAgent({ host: \"http://127.0.0.1:4943\" });\nagent.fetchRootKey(); // Necessary for local development\n\nconsole.log(\"Canister ID:\", hopechain_engine_id);\n\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id,\n});\n\nexport const registerUser = async (name) => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user;\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const checkUser = async (name) => {\n  try {\n    return await hopechain_engine.getUser(name);\n  } catch (error) {\n    console.error('Error checking user:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,gBAAgB;AACjD,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,0EAA0E;AAC7H,SAASC,UAAU,IAAIC,mBAAmB,QAAQ,mDAAmD;AAErG,MAAMC,KAAK,GAAG,IAAIL,SAAS,CAAC;EAAEM,IAAI,EAAE;AAAwB,CAAC,CAAC;AAC9DD,KAAK,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;;AAEtBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,mBAAmB,CAAC;AAEhD,MAAMM,gBAAgB,GAAGX,KAAK,CAACY,WAAW,CAACT,oBAAoB,EAAE;EAC/DG,KAAK;EACLF,UAAU,EAAEC;AACd,CAAC,CAAC;AAEF,OAAO,MAAMQ,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMJ,gBAAgB,CAACE,YAAY,CAACC,IAAI,CAAC;IACtD,IAAIC,IAAI,EAAE;MACRN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,IAAI,CAAC;MACrC,OAAOA,IAAI;IACb,CAAC,MAAM;MACLN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOH,IAAI,IAAK;EACvC,IAAI;IACF,OAAO,MAAMH,gBAAgB,CAACO,OAAO,CAACJ,IAAI,CAAC;EAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}