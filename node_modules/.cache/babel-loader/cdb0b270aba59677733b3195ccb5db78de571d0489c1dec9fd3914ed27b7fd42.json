{"ast":null,"code":"import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\nimport { HopeChain } from '../';\nconst agent = new HttpAgent({\n  host: \"http://127.0.0.1:4943\"\n});\nagent.fetchRootKey(); // Necessary for local development\n\nconst hopechain_engine_id = process.env.REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID;\nconsole.log(\"Canister ID:\", hopechain_engine_id);\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id\n});\nexport const registerUser = async name => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user;\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport async function checkUser(name) {\n  return await HopeChain.getUser(name);\n}","map":{"version":3,"names":["Actor","HttpAgent","idlFactory","hopechain_engine_idl","HopeChain","agent","host","fetchRootKey","hopechain_engine_id","process","env","REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID","console","log","hopechain_engine","createActor","canisterId","registerUser","name","user","error","checkUser","getUser"],"sources":["/home/jeco/myprojects/icp/hopechain-frontend/src/ic/ic-service.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\nimport { idlFactory as hopechain_engine_idl } from '../declarations/hopechain-engine-backend/hopechain-engine-backend.did.js';\nimport { HopeChain } from '../';\n\n\nconst agent = new HttpAgent({ host: \"http://127.0.0.1:4943\" });\nagent.fetchRootKey(); // Necessary for local development\n\nconst hopechain_engine_id = process.env.REACT_APP_HOPECHAIN_ENGINE_BACKEND_CANISTER_ID;\n\nconsole.log(\"Canister ID:\", hopechain_engine_id);\n\nconst hopechain_engine = Actor.createActor(hopechain_engine_idl, {\n  agent,\n  canisterId: hopechain_engine_id,\n});\n\nexport const registerUser = async (name) => {\n  try {\n    const user = await hopechain_engine.registerUser(name);\n    if (user) {\n      console.log('User registered:', user);\n      return user\n    } else {\n      console.log('User already exists');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport async function checkUser(name) {\n  return await HopeChain.getUser(name);\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,gBAAgB;AACjD,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,0EAA0E;AAC7H,SAASC,SAAS,QAAQ,KAAK;AAG/B,MAAMC,KAAK,GAAG,IAAIJ,SAAS,CAAC;EAAEK,IAAI,EAAE;AAAwB,CAAC,CAAC;AAC9DD,KAAK,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;;AAEtB,MAAMC,mBAAmB,GAAGC,OAAO,CAACC,GAAG,CAACC,8CAA8C;AAEtFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,mBAAmB,CAAC;AAEhD,MAAMM,gBAAgB,GAAGd,KAAK,CAACe,WAAW,CAACZ,oBAAoB,EAAE;EAC/DE,KAAK;EACLW,UAAU,EAAER;AACd,CAAC,CAAC;AAEF,OAAO,MAAMS,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMC,IAAI,GAAG,MAAML,gBAAgB,CAACG,YAAY,CAACC,IAAI,CAAC;IACtD,IAAIC,IAAI,EAAE;MACRP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEM,IAAI,CAAC;MACrC,OAAOA,IAAI;IACb,CAAC,MAAM;MACLP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,eAAeC,SAASA,CAACH,IAAI,EAAE;EACpC,OAAO,MAAMd,SAAS,CAACkB,OAAO,CAACJ,IAAI,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}